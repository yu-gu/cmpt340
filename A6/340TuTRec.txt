Prelude> "Hello HHAHAHAHA "
"Hello HHAHAHAHA "
Prelude> "Hello HHAHAHAHA " !! 4
'o'
Prelude> "Hello HHAHAHAHA " !! 5
' '
Prelude> 1:2 []

<interactive>:4:1: error:
    • Non type-variable argument in the constraint: Num ([t] -> [a])
      (Use FlexibleContexts to permit this)
    • When checking the inferred type
        it :: forall a t. (Num ([t] -> [a]), Num a) => [a]
Prelude> 1:2 :[]
[1,2]
Prelude> [1,2]
[1,2]
Prelude> [1,2] > []
True
Prelude> [1,2] > [2]
False
Prelude> [1,2] > []
True
Prelude> [1,2] > [1]
True
Prelude> [1,2] > [1,3]
False
Prelude> [1,2] > [1]
True
Prelude> tail []
*** Exception: Prelude.tail: empty list
Prelude> tail [1,2]
[2]
Prelude> tail [1,2,3,4,5,6]
[2,3,4,5,6]
Prelude> 1 `elem` [2,3]
False
Prelude> minimum [1,2,3,4,5]
1
Prelude> minimum [1,2,3,4,5,0]
0
Prelude> minimum [1,2,3,4,5,0,-1]
-1
Prelude> maximum [1,2,3,4,5,0,-1]
5
Prelude> [1.5 .. 5]
[1.5,2.5,3.5,4.5,5.5]
Prelude> [1,3 .. 5]
[1,3,5]
Prelude> [1,3 .. 10]
[1,3,5,7,9]
Prelude> [1,3 .. 100]
[1,3,5,7,9,11,13,15,17,19,21,23,25,27,29,31,33,35,37,39,41,43,45,47,49,51,53,55,57,59,61,63,65,67,69,71,73,75,77,79,81,83,85,87,89,91,93,95,97,99]
Prelude> 
Prelude> 
Prelude> :clear
unknown command ':clear'
use :? for help.
Prelude>  take 12 [997,999 ..]
[997,999,1001,1003,1005,1007,1009,1011,1013,1015,1017,1019]
Prelude> [x+1 | x <- [1,3 .. 9]]
[2,4,6,8,10]
Prelude> filter (>4) [3..7]
[5,6,7]
Prelude> filter (>4) [3..10]
[5,6,7,8,9,10]
Prelude> foldr (+) 0 [3..7]
25
Prelude> filter (even)[6..15]
[6,8,10,12,14]
Prelude> filter (even) [6..15]
[6,8,10,12,14]
Prelude> [6,8..15]
[6,8,10,12,14]
Prelude> [17,20 ..57]
[17,20,23,26,29,32,35,38,41,44,47,50,53,56]
Prelude> [a,e...z]

<interactive>:37:2: error: Variable not in scope: a

<interactive>:37:4: error: Variable not in scope: e

<interactive>:37:5: error:
    Variable not in scope: (...) :: t0 -> t1 -> t

<interactive>:37:8: error: Variable not in scope: z
Prelude> ['a','e...z]

<interactive>:38:6: error:
    • Syntax error on 'e
      Perhaps you intended to use TemplateHaskell or TemplateHaskellQuotes
    • In the Template Haskell quotation 'e
Prelude> ['a','e'...'z']

<interactive>:39:9: error:
    Variable not in scope: (...) :: Char -> Char -> Char
Prelude> ['a','e'..'z']
"aeimquy"
Prelude> ['a','e'..]